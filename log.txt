Issues:
* Same review being appended twice (Fixed) - This was fixed by checking if the name of the review's creator was already in the dictionary. The issue occurred due to the HTML element that contained the review, appearing twice. The correct HTML for the actual container that appears once, is currently in use.

* Reviews not being expanded (Fixed) - the expand_review(driver) function searches for the total of "More" buttons currently on the page, by its CSS selector and clicks them

* Reviews section needs to be scrolled all the way down to load all reviews (Fixed) - used the enum class Keys from selenium and its attributue END, which imitates the END key on a keyboard (which scrolls to the end of a page when pressed), on the HTML element that contains all reviews (aka the review_section)

* Quotation marks and apostrophes appear as diamond question marks (Fixed) - used UTF-8 encoding





This function was originally made to navigate from the overview tab to reviews tab when given the url to the overview instead.
Decided to make a function where it would just check if the reviews tab button was active or not instead of checking the button for overview
Keeping the code here for logic and syntax reminder
"""
def check_and_navigate_from_overview(driver):
    # makes driver wait for page to load the overview tab button element or until the 2 sec timer is done
    WebDriverWait(driver, 2).until(EC.visibility_of_element_located((By.CSS_SELECTOR, "button.hh2c6.G7m0Af")))
    
    
    #Testing purposes
    buttons = driver.find_elements(By.CSS_SELECTOR, "button[aria-label*=Overview]")
    print(len(buttons))
    
    
    # Can't do it by this selector or set of class names. Check log
    #overview_button = driver.find_element(By.CSS_SELECTOR, "button.hh2c6.G7m0Af")
    
    
    Can also use find_element(By.XPATH, "//button[contains(@aria-label, 'Overview')]")
    The asterisk * used in button[aria-label*=Overview] finds button that contains the substring "Overview"
    Without it, it will only look for button with the aria-label that contains exactly "Overview"
    
    # can also use find_element(By.XPATH, "//button[contains(@aria-label, 'Overview')]")
    overview_button = driver.find_element(By.CSS_SELECTOR, "button[aria-label*=Overview]")
    aria_selected = overview_button.get_attribute("aria-selected")
    # selected_status = aria_selected == "true"
    
    if aria_selected == "true":
        #print("Hovered on Overview")
        reviews_button = driver.find_element(By.CSS_SELECTOR, "button[aria-label*=Reviews]")
        reviews_button.click()
        time.sleep(5)
        
    else:
        return
"""